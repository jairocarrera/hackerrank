y <- sqrt(strtoi(n*2)
n + 10
}
getTime <- function(x, s1, s2){
y <- sqrt(strtoi(n*2)
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
(x - y)/(s2 - s1)
getTime <- function(x, s1, s2, y, t){
getTime <- function(x, s1, s2, y, t){
y <- sqrt(strtoi(n*2)
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2, y, t){
y <- sqrt(strtoi(n*2)
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2, y, t){
sqrt(strtoi(n*2)
(x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2){
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2){
y <- sqrt(strtoi(n*2)
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2){
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime <- function(x, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(x, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime(50, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(x, s1, s2){
y <- sqrt(strtoi(x*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime(50, s1, s2)
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime(50, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
getTime(50000, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
arr <- c(100,50)
getTime(arr, s1, s2)
arr <- nums[3,]
arr <- nums[3:length(nums)-1]
nums <- suppressWarnings(readLines(file("input.txt")))
arr <- nums[3:length(nums)-1]
arr <- nums[2:length(nums)-1]
arr <- nums[1:length(nums)-1]
getTime(arr, s1, s2)
arr <- nums[1:length(nums)-1]
arr <- nums[1:length(nums)]
arr <- nums[3:length(nums)]
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
arr <- nums[3:length(nums)]
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t+"\n")
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(toString(t)+"\n")
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(paste(toString(t),"\n"))
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
#nums <- suppressWarnings(readLines(file("stdin")))
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
cat(t)
cat("\n")
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
t <- (x - y)/(s2 - s1)
solution <- paste(solution,toString(t))
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- (x - y)/(s2 - s1)
}
arr <- as.integer(nums[3:length(nums)])
getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- (x - y)/(s2 - s1)
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- (x - y)/(s2 - s1)
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- (x - y)/(s2 - s1)
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=10)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=10)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
options(digits=10)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
x
options(digits=20)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
x
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=30)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=20)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(strtoi(unlist(strsplit(nums[1], split=" "))[1])^2 + strtoi(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- strtoi(unlist(strsplit(nums[1], split=" "))[2])
s2 <- strtoi(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.integer(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
y
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
#cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2)
y
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
#cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2)
cat(y)
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(strtoi(n*2))
cat(y)
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
#cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(as.double(n*2))
cat(y)
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
#cat(arr2, sep="\n")
options(digits=25)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(as.double(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.double(unlist(strsplit(nums[1], split=" "))[1])^2 + as.double(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.double(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.double(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(as.double(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.double(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.float(unlist(strsplit(nums[1], split=" "))[1])^2 + as.float(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.float(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.float(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(as.float(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.float(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
#nums <- suppressWarnings(readLines(file("stdin")))
options(digits = 15)
nums <- suppressWarnings(readLines(file("input.txt")))
x <- sqrt(as.float(unlist(strsplit(nums[1], split=" "))[1])^2 + as.float(unlist(strsplit(nums[1], split=" "))[1])^2)
s1 <- as.float(unlist(strsplit(nums[1], split=" "))[2])
s2 <- as.float(unlist(strsplit(nums[1], split=" "))[3])
solution <- ""
getTime <- function(n, s1, s2){
y <- sqrt(as.float(n*2))
n <- abs((x - y)/(s2 - s1))
}
arr <- as.float(nums[3:length(nums)])
arr2 <- getTime(arr, s1, s2)
cat(arr2, sep="\n")
con <- dbConnect(MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
install.packages("RMySQL")
library(DBI)
con <- dbConnect(MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
con <- dbConnect(RMySQL::MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
con <- dbConnect(RMySQL::MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
dbListTables(con)
rs <- dbSendQuery(con, "select * from facturas")
rs
dbFetch(rs)
rs <- dbSendQuery(con, "select * from terminales")
dbFetch(rs)
data<-dbFetch(rs)
data <- as.data.frame(fetch(rs, n=10))
summary(data)
data <- as.data.frame(fetch(rs)
data <- as.data.frame(fetch(rs))
summary(data)
data <- as.data.frame(fetch(rs))
data
summary(data)
length(data)
length(data$idTerminal)
data <- as.data.frame(fetch(rs, n=10000))
rs <- dbSendQuery(con, "select * from terminales limit 10000")
con <- dbConnect(RMySQL::MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
rs <- dbSendQuery(con, "select * from terminales limit 10000")
data<-dbFetch(rs)
data <- as.data.frame(fetch(rs, n=10000))
con <- dbConnect(RMySQL::MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
rs <- dbSendQuery(con, "select * from terminales limit 100000")
data <- as.data.frame(fetch(rs, n=10000))
data <- as.data.frame(fetch(rs, n=100000))
length(data$terminales)
length(data$idTerminal)
data<-dbFetch(rs)
con <- dbConnect(RMySQL::MySQL(), user="root", password="f5llv1ll", dbname="mobilepoint", host="desarrollo.redeem.es")
rs <- dbSendQuery(con, "select * from terminales limit 100000")
data <- as.data.frame(fetch(rs, n=100000))
summary(data)
